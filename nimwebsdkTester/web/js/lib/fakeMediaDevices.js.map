{"version":3,"file":"fakeMediaDevices.js","mappings":"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","sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/./lib/audio/bbdbbjyy.mp3","webpack://[name]/./lib/audio/brysj.mp3","webpack://[name]/./lib/audio/mmdmmjnn.mp3","webpack://[name]/./node_modules/arraybuffer-loader/lib/to-array-buffer.js","webpack://[name]/webpack/bootstrap","webpack://[name]/webpack/runtime/define property getters","webpack://[name]/webpack/runtime/hasOwnProperty shorthand","webpack://[name]/webpack/runtime/make namespace object","webpack://[name]/./lib/audio/audio.ts","webpack://[name]/./lib/video/video.ts","webpack://[name]/./lib/fakeMediaDevices.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fakeMediaDevices\"] = factory();\n\telse\n\t\troot[\"fakeMediaDevices\"] = factory();\n})(self, function() {\nreturn ","module.exports = require(\"../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"\")","module.exports = require(\"../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"\")","module.exports = require(\"../../node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"\")","'use strict'\n\nmodule.exports = function (base64Data) {\n  var isBrowser = typeof window !== 'undefined' && typeof window.atob === 'function'\n  var binary = isBrowser ? window.atob(base64Data) : Buffer.from(base64Data, 'base64').toString('binary')\n  var bytes = new Uint8Array(binary.length)\n\n  for (var i = 0; i < binary.length; ++i) {\n    bytes[i] = binary.charCodeAt(i)\n  }\n\n  return bytes.buffer\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const brysj = require(\"./brysj.mp3\")\nconst bbdbbjyy = require(\"./bbdbbjyy.mp3\")\nconst mmdmmjnn = require(\"./mmdmmjnn.mp3\")\n\nexport interface ArrayBufferInput{\n    data: ArrayBuffer;\n    loop: boolean;\n}\n\nexport interface fakeAudioTrackConstraints{\n    sampleRate?: number;\n    mono?: ArrayBufferInput;\n    left?: boolean|ArrayBufferInput;\n    right?: boolean|ArrayBufferInput;\n    channelCount?: 1|2;\n}\n\nconst ctxMap: {\n    [sampleRate: number]: AudioContext\n} = {};\n\nexport function getAudioTrack(constraint: fakeAudioTrackConstraints){\n    const {\n        sampleRate = 48000,\n        channelCount = 1,\n    } = constraint\n\n    let context:AudioContext = ctxMap[sampleRate];\n    if (!context){\n        if (window.AudioContext){\n            context = new AudioContext({sampleRate});\n        }else{\n            //@ts-ignore\n            context = new webkitAudioContext({sampleRate});\n        }\n        ctxMap[sampleRate] = context;\n    }\n    let destination: MediaStreamAudioDestinationNode;\n    try{\n        destination = new MediaStreamAudioDestinationNode(context, {channelCount});\n        console.log(\"ChannelCount\", channelCount);\n    }catch(e){\n        console.error(e)\n        //@ts-ignore\n        if (e.name === \"TypeError\"){\n            destination = context.createMediaStreamDestination();\n        }else{\n            throw e;\n        }\n    }\n    if (channelCount === 1){\n        const mono: ArrayBufferInput = constraint.mono || {\n            data: brysj.slice(0),\n            loop: true\n        };\n        context.decodeAudioData(mono.data, (buffer:AudioBuffer)=>{\n            const audioSource = context.createBufferSource()\n            audioSource.buffer = buffer;\n            audioSource.loop = mono.loop;\n            audioSource.connect(destination);\n            audioSource.start()\n        })\n    } else if (channelCount === 2){\n        const merger = context.createChannelMerger(channelCount);\n        merger.connect(destination);\n        const duration = 1.764;\n        if (constraint.left !== false){\n            const left = typeof constraint.left === \"object\" ? constraint.left : {\n                data: bbdbbjyy.slice(0),\n                loop: true,\n            };\n            context.decodeAudioData(left.data, (buffer:AudioBuffer)=>{\n                const audioSource = context.createBufferSource()\n                audioSource.buffer = buffer;\n                audioSource.loop = left.loop;\n                audioSource.connect(merger, 0, 0);\n                audioSource.start(0)\n            })\n        }\n        if (constraint.right !== false){\n            const right = typeof constraint.right === \"object\" ? constraint.right : {\n                data: mmdmmjnn.slice(0),\n                loop: true\n            };\n            context.decodeAudioData(right.data, (buffer:AudioBuffer)=>{\n                const audioSource = context.createBufferSource()\n                audioSource.buffer = buffer;\n                audioSource.loop = right.loop;\n                audioSource.connect(merger, 0, 1);\n                audioSource.start(0)\n            })\n        }\n    }\n    const audioTrack = destination.stream.getAudioTracks()[0];\n    return audioTrack;\n}","export interface fakeVideoTrackConstraints{\n    width: number;\n    height: number;\n    frameRate: number;\n    content: string;\n    background: string;\n}\n\nclass Clock{\n    private constraints: fakeVideoTrackConstraints;\n    private canvas: HTMLCanvasElement;\n    private ctx: CanvasRenderingContext2D;\n    private frameHistory: {time: number, fromSetInterval: boolean}[] = []\n    private frameHistoryTime = 2000;\n    private startTime: number = 0;\n    private interval: any = null;\n    private frameMinInterval: number = 0;\n    private trackEnded: boolean = false;\n    constructor(constraints: fakeVideoTrackConstraints) {\n        this.constraints = constraints;\n        this.canvas = document.createElement(\"canvas\")\n        this.canvas.width = constraints.width;\n        this.canvas.height = constraints.height;\n\n        const ctx = this.canvas.getContext('2d')\n        if (ctx){\n            this.ctx = ctx\n        }else{\n            throw new Error(\"Not supported\")\n        }\n    }\n    drawFrame (fromSetInterval:boolean = false, tsIn?: number){\n        const ts = Date.now()\n        if (this.trackEnded){\n            clearInterval(this.interval);\n            return;\n        }\n        this.frameHistory = this.frameHistory.filter((item)=>{\n            return ts - item.time < this.frameHistoryTime\n        })\n        const fps = this.frameHistory.length / Math.min(ts - this.startTime, this.frameHistoryTime) * 1000\n        const frameInterval = this.frameHistory[this.frameHistory.length - 1] ? ts - this.frameHistory[this.frameHistory.length - 1].time : 99999\n        if (\n            // fps超了\n            fps > this.constraints.frameRate ||\n            // 与上一帧间隔短了\n            this.frameMinInterval > frameInterval\n        ){\n            if (!fromSetInterval){\n                window.requestAnimationFrame(this.drawFrame.bind(this, false));\n            }\n            return;\n        }\n        this.frameHistory.push({time: ts, fromSetInterval})\n\n        const ctx = this.ctx;\n\n        ctx.save();\n        ctx.fillStyle = this.constraints.background;\n        ctx.fillRect(0,0,this.constraints.width,this.constraints.height);\n\n        const now = new Date(ts);\n        ctx.font = \"44px serif\";\n        ctx.fillStyle = \"black\";\n        const text1 = `${this.constraints.content}`\n        ctx.fillText(text1, this.constraints.width - 480, this.constraints.height - 150)\n        const text2 = `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}.${now.getMilliseconds()}`\n        ctx.fillText(text2, this.constraints.width - 480, this.constraints.height - 100)\n        const text3 = `Capture${this.canvas.width}x${this.canvas.height} fps${fps} `\n        ctx.fillText(text3, this.constraints.width - 480, this.constraints.height - 50)\n\n        ctx.translate(150,150);\n        ctx.rotate(-Math.PI/2);\n        ctx.strokeStyle = \"black\";\n        ctx.fillStyle = \"white\";\n        ctx.lineWidth = 8;\n        ctx.lineCap = \"round\";\n\n        // Hour marks\n        ctx.save();\n        for (var i=0;i<12;i++){\n            ctx.beginPath();\n            ctx.rotate(Math.PI/6);\n            ctx.moveTo(100,0);\n            ctx.lineTo(120,0);\n            ctx.stroke();\n        }\n        ctx.restore();\n\n        // Minute marks\n        ctx.save();\n        ctx.lineWidth = 5;\n        for (i=0;i<60;i++){\n            if (i%5!=0) {\n                ctx.beginPath();\n                ctx.moveTo(117,0);\n                ctx.lineTo(120,0);\n                ctx.stroke();\n            }\n            ctx.rotate(Math.PI/30);\n        }\n        ctx.restore();\n\n        var sec = now.getSeconds();\n        var min = now.getMinutes();\n        var hr  = now.getHours();\n        hr = hr>=12 ? hr-12 : hr;\n\n        ctx.fillStyle = \"black\";\n\n        // write Hours\n        ctx.save();\n        ctx.rotate( hr*(Math.PI/6) + (Math.PI/360)*min + (Math.PI/21600)*sec )\n        ctx.lineWidth = 14;\n        ctx.beginPath();\n        ctx.moveTo(-20,0);\n        ctx.lineTo(80,0);\n        ctx.stroke();\n        ctx.restore();\n\n        // write Minutes\n        ctx.save();\n        ctx.rotate( (Math.PI/30)*min + (Math.PI/1800)*sec )\n        ctx.lineWidth = 10;\n        ctx.beginPath();\n        ctx.moveTo(-28,0);\n        ctx.lineTo(112,0);\n        ctx.stroke();\n        ctx.restore();\n\n        // Write seconds\n        ctx.save();\n        ctx.rotate((now.getTime() % 60000) / 1000 * Math.PI/30);\n        ctx.strokeStyle = \"#D40000\";\n        ctx.fillStyle = \"#D40000\";\n        ctx.lineWidth = 6;\n        ctx.beginPath();\n        ctx.moveTo(-30,0);\n        ctx.lineTo(83,0);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.arc(0,0,10,0,Math.PI*2,true);\n        ctx.fill();\n        ctx.beginPath();\n        ctx.arc(95,0,10,0,Math.PI*2,true);\n        ctx.stroke();\n        ctx.fillStyle = \"rgba(0,0,0,0)\";\n        ctx.arc(0,0,3,0,Math.PI*2,true);\n        ctx.fill();\n        ctx.restore();\n\n        //\n        // write Minutes\n        ctx.save();\n        ctx.rotate( (Math.PI/1000 * 2) * (Date.now() % 1000))\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(-28,0);\n        ctx.lineTo(120,0);\n        ctx.stroke();\n        ctx.restore();\n        //\n\n        ctx.beginPath();\n        ctx.lineWidth = 14;\n        ctx.strokeStyle = '#325FA2';\n        ctx.arc(0,0,142,0,Math.PI*2,true);\n        ctx.stroke();\n\n        ctx.restore();\n        window.requestAnimationFrame(this.drawFrame.bind(this, false));\n    }\n    start (){\n        this.startTime = Date.now();\n        this.frameMinInterval = Math.floor(1000 / this.constraints.frameRate)\n        this.drawFrame(false, performance.now())\n        this.interval = setInterval(this.drawFrame.bind(this, true), 0)\n        //@ts-ignore\n        const stream:MediaStream = this.canvas.captureStream(this.constraints.frameRate)\n        const videoTrack = stream.getVideoTracks()[0];\n        videoTrack.addEventListener(\"ended\", ()=>{\n            this.trackEnded = true\n        })\n        // setInterval(()=>{\n        //     const cntFromSetInterval = this.frameHistory.filter((item)=>{\n        //         return item.fromSetInterval;\n        //     })\n        //     console.log(\"cntFromSetInterval\", cntFromSetInterval.length, \"/\", this.frameHistory.length)\n        // }, this.frameHistoryTime)\n        return stream;\n    }\n}\n\nexport function getVideoTrack(constraints: fakeVideoTrackConstraints){\n    const clock = new Clock(constraints);\n    const mediaStream:MediaStream = clock.start()\n    return mediaStream.getVideoTracks()[0];\n}","import {ArrayBufferInput, fakeAudioTrackConstraints, getAudioTrack} from \"./audio/audio\";\nimport {fakeVideoTrackConstraints, getVideoTrack} from \"./video/video\";\n\nexport interface videoTrackConstraintInput{\n    width?: number;\n    height?: number;\n    frameRate?: number;\n    content?: string;\n    background?: string;\n}\n\nexport interface audioTrackConstraintInput{\n    sampleRate?: number;\n    mono?: ArrayBufferInput;\n    left?: boolean|ArrayBufferInput;\n    right?: boolean|ArrayBufferInput;\n    channelCount?: 1|2;\n}\n\ninterface fakeMediaStreamConstraints{\n    audio?: boolean|fakeAudioTrackConstraints\n    video?: boolean|videoTrackConstraintInput\n}\n\nexport const audioTracks:MediaStreamTrack[] = []\nexport const videoTracks:MediaStreamTrack[] = []\n\nexport function getFakeMedia(constrants: fakeMediaStreamConstraints){\n    let audioTrack:MediaStreamTrack|null = null\n    let videoTrack:MediaStreamTrack|null = null\n    const tracks:MediaStreamTrack[] = [];\n    if (constrants.audio){\n        // promises.push(getAudioTrack().then((track)=>{\n        //     audioTrack = track\n        // }))\n        audioTrack = getAudioTrack(constrants.audio === true ? {channelCount: 1} : constrants.audio);\n        tracks.push(audioTrack)\n        audioTracks.push(audioTrack)\n    }\n    if (constrants.video){\n        const defaultVideoConstraints:fakeVideoTrackConstraints = {\n            width: 1024,\n            height: 768,\n            frameRate: 60,\n            content: \"Video\",\n            background: \"#ddd\",\n        };\n        const videoConstraints = Object.assign({}, defaultVideoConstraints, constrants.video === true ? {} : constrants.video)\n        videoTrack = getVideoTrack(videoConstraints);\n        tracks.push(videoTrack)\n        videoTracks.push(videoTrack)\n    }\n    return new MediaStream(tracks)\n}"],"names":["root","factory","exports","module","define","amd","self","base64Data","binary","window","atob","Buffer","from","toString","bytes","Uint8Array","length","i","charCodeAt","buffer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","brysj","bbdbbjyy","mmdmmjnn","ctxMap","Clock","constructor","constraints","frameHistory","frameHistoryTime","startTime","interval","frameMinInterval","trackEnded","this","canvas","document","createElement","width","height","ctx","getContext","Error","drawFrame","fromSetInterval","tsIn","ts","Date","now","clearInterval","filter","item","time","fps","Math","min","frameInterval","frameRate","requestAnimationFrame","bind","push","save","fillStyle","background","fillRect","font","text1","content","fillText","text2","getHours","getMinutes","getSeconds","getMilliseconds","text3","translate","rotate","PI","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","restore","sec","hr","getTime","arc","fill","start","floor","performance","setInterval","stream","captureStream","getVideoTracks","addEventListener","audioTracks","videoTracks","getFakeMedia","constrants","audioTrack","videoTrack","tracks","audio","constraint","sampleRate","channelCount","destination","context","AudioContext","webkitAudioContext","MediaStreamAudioDestinationNode","console","log","e","error","name","createMediaStreamDestination","mono","data","slice","loop","decodeAudioData","audioSource","createBufferSource","connect","merger","createChannelMerger","left","right","getAudioTracks","getAudioTrack","video","defaultVideoConstraints","videoConstraints","assign","MediaStream"],"sourceRoot":""}