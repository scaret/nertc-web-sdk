export const typedArray = {
  // 位置数据
  posArray: new Int8Array([-1, 1, -1, -1, 1, 1, 1, -1]),
  // UV 数据
  uvArray: new Uint8Array([0, 1, 0, 0, 1, 1, 1, 0]),
  // 高级美颜点位信息
  advBeautyPosArray: new Int16Array(
    (() => {
      const extras = []
      for (let i = 0; i < 106 + 11 + 28; i++) {
        extras.push(0, 0)
      }
      extras.push(0, 0, 0, 1, 1, 1, 1, 0)
      return extras
    })()
  ),
  // 高级美颜深度信息
  advBeautyZindexArray: new Int16Array(
    (() => {
      const idx = []
      for (let i = 0; i < 106 + 11 + 28; i++) {
        idx.push(0)
      }
      idx.push(-1, -1, -1, -1)
      return idx
    })()
  ),
  // 高级美颜 facemesh 索引
  advBeautyIndicesArray: new Uint16Array([
    //plane
    145, 146, 147, 145, 147, 148,
    // left eye around
    0, 2, 52, 52, 2, 57, 57, 2, 4, 57, 4, 73, 73, 4, 80, 73, 80, 56, 56, 80, 55, 55, 80, 43, 67, 55,
    43, 67, 54, 55, 66, 54, 67, 66, 72, 54, 65, 72, 66, 65, 53, 72, 64, 53, 65, 64, 52, 53, 33, 52,
    64, 0, 52, 33,
    // left brow
    33, 64, 34, 34, 64, 65, 34, 65, 35, 35, 65, 66, 35, 66, 36, 36, 66, 67, 36, 67, 37,
    // left eye
    53, 52, 57, 53, 57, 73, 53, 73, 72, 72, 73, 56, 72, 56, 54, 54, 56, 55,
    // nose
    37, 67, 43, 37, 43, 38, 38, 43, 68, 68, 43, 58, 58, 43, 81, 43, 46, 81, 81, 46, 83, 46, 51, 83,
    46, 49, 51, 46, 47, 49, 46, 82, 47, 80, 82, 46, 43, 80, 46, 43, 55, 80, 67, 55, 43,
    // right brow
    38, 68, 39, 39, 68, 69, 39, 69, 40, 40, 69, 70, 40, 70, 41, 41, 70, 71, 41, 71, 42,
    // right eye around
    32, 61, 30, 30, 61, 62, 30, 62, 28, 62, 76, 28, 76, 81, 28, 63, 81, 76, 58, 81, 63, 43, 81, 58,
    43, 58, 68, 68, 58, 59, 68, 59, 69, 69, 59, 75, 69, 75, 70, 70, 75, 60, 70, 60, 71, 71, 60, 61,
    71, 61, 42, 42, 61, 32,
    // right eye
    59, 58, 63, 59, 63, 76, 59, 76, 75, 75, 76, 62, 75, 62, 60, 60, 62, 61,
    // face
    4, 82, 80, 4, 6, 82, 6, 8, 82, 82, 8, 84, 8, 10, 84, 84, 10, 12, 84, 12, 95, 95, 12, 14, 95, 14,
    94, 94, 14, 93, 93, 14, 16, 93, 16, 18, 93, 18, 92, 92, 18, 20, 92, 20, 91, 91, 20, 90, 90, 20,
    22, 90, 22, 24, 90, 24, 83, 83, 24, 26, 83, 26, 28, 83, 28, 81,
    // face top
    106, 0, 33, 106, 33, 34, 107, 106, 34, 107, 34, 35, 108, 107, 35, 108, 35, 36, 109, 108, 36,
    109, 36, 37, 110, 109, 37, 116, 110, 37, 116, 37, 38, 115, 116, 38, 114, 115, 38, 114, 38, 39,
    113, 114, 39, 113, 39, 40, 112, 113, 40, 112, 40, 41, 111, 112, 41, 111, 41, 42, 111, 42, 32,
    // mouth top
    82, 84, 47, 47, 84, 85, 47, 85, 86, 47, 86, 49, 49, 86, 87, 49, 87, 88, 49, 88, 51, 51, 88, 89,
    51, 89, 90, 83, 51, 90,
    // mouth
    85, 84, 96, 85, 96, 97, 85, 97, 86, 86, 97, 87, 87, 97, 98, 87, 98, 99, 87, 99, 88, 88, 99, 89,
    89, 99, 100, 89, 100, 90, 100, 91, 90, 101, 91, 100, 101, 92, 91, 102, 92, 101, 102, 93, 92,
    102, 94, 93, 103, 94, 102, 103, 95, 94, 96, 95, 103, 84, 95, 96,
    // mouth inner
    96, 103, 97, 97, 103, 102, 97, 102, 98, 98, 102, 99, 99, 102, 101, 99, 101, 100,
    // extra bottom
    0, 117, 118, 0, 118, 2, 2, 118, 119, 2, 119, 4, 4, 119, 120, 4, 120, 6, 6, 120, 121, 6, 121, 8,
    8, 121, 122, 8, 122, 10, 10, 122, 123, 10, 123, 12, 12, 123, 124, 12, 124, 14, 14, 124, 125, 14,
    125, 16, 16, 125, 126, 16, 126, 18, 18, 126, 127, 18, 127, 20, 20, 127, 128, 20, 128, 22, 22,
    128, 129, 22, 129, 24, 24, 129, 130, 24, 130, 26, 26, 130, 131, 26, 131, 28, 28, 131, 132, 28,
    132, 30, 30, 132, 133, 30, 133, 32,
    // extra top
    106, 134, 117, 106, 117, 0, 107, 135, 134, 107, 134, 106, 108, 136, 135, 108, 135, 107, 109,
    137, 136, 109, 136, 108, 110, 138, 137, 110, 137, 109, 116, 144, 138, 116, 138, 110, 115, 143,
    144, 115, 144, 116, 114, 142, 143, 114, 143, 115, 113, 141, 142, 113, 142, 114, 112, 140, 141,
    112, 141, 113, 111, 139, 140, 111, 140, 112, 32, 133, 139, 32, 139, 111
  ]),
  // facemask uv
  advFaceMaskUVArray: new Float32Array([
    0.30859375, 0.58203125, 0.30859375, 0.5546875, 0.310546875, 0.52734375, 0.3125, 0.5,
    0.314453125, 0.47265625, 0.318359375, 0.4453125, 0.322265625, 0.41796875, 0.330078125,
    0.392578125, 0.337890625, 0.369140625, 0.349609375, 0.34765625, 0.365234375, 0.328125,
    0.380859375, 0.310546875, 0.400390625, 0.296875, 0.419921875, 0.28515625, 0.44140625,
    0.27734375, 0.46484375, 0.271484375, 0.486328125, 0.26953125, 0.509765625, 0.271484375,
    0.533203125, 0.275390625, 0.5546875, 0.283203125, 0.578125, 0.29296875, 0.59765625, 0.306640625,
    0.6171875, 0.32421875, 0.634765625, 0.341796875, 0.650390625, 0.36328125, 0.662109375,
    0.388671875, 0.669921875, 0.4140625, 0.67578125, 0.44140625, 0.6796875, 0.46875, 0.68359375,
    0.49609375, 0.685546875, 0.525390625, 0.6875, 0.552734375, 0.6875, 0.580078125, 0.33984375,
    0.634765625, 0.36328125, 0.66796875, 0.392578125, 0.673828125, 0.421875, 0.671875, 0.451171875,
    0.6640625, 0.521484375, 0.666015625, 0.55078125, 0.671875, 0.58203125, 0.673828125, 0.611328125,
    0.666015625, 0.63671875, 0.634765625, 0.486328125, 0.60546875, 0.484375, 0.568359375,
    0.482421875, 0.533203125, 0.482421875, 0.498046875, 0.443359375, 0.47265625, 0.462890625,
    0.46875, 0.484375, 0.46484375, 0.505859375, 0.470703125, 0.52734375, 0.474609375, 0.369140625,
    0.599609375, 0.384765625, 0.611328125, 0.421875, 0.611328125, 0.4375, 0.59765625, 0.419921875,
    0.591796875, 0.384765625, 0.591796875, 0.537109375, 0.59765625, 0.552734375, 0.611328125,
    0.591796875, 0.611328125, 0.607421875, 0.59765625, 0.591796875, 0.591796875, 0.5546875,
    0.591796875, 0.36328125, 0.646484375, 0.392578125, 0.650390625, 0.421875, 0.6484375,
    0.451171875, 0.642578125, 0.521484375, 0.642578125, 0.55078125, 0.6484375, 0.580078125,
    0.6484375, 0.611328125, 0.64453125, 0.40234375, 0.615234375, 0.400390625, 0.58984375,
    0.40234375, 0.6015625, 0.57421875, 0.615234375, 0.57421875, 0.58984375, 0.572265625, 0.6015625,
    0.4609375, 0.6015625, 0.51171875, 0.6015625, 0.443359375, 0.521484375, 0.5234375, 0.5234375,
    0.431640625, 0.490234375, 0.537109375, 0.4921875, 0.416015625, 0.392578125, 0.44140625,
    0.41796875, 0.470703125, 0.427734375, 0.486328125, 0.427734375, 0.5, 0.4296875, 0.53125,
    0.419921875, 0.55859375, 0.39453125, 0.537109375, 0.375, 0.51171875, 0.36328125, 0.484375,
    0.361328125, 0.4609375, 0.36328125, 0.4375, 0.375, 0.421875, 0.392578125, 0.453125, 0.408203125,
    0.484375, 0.412109375, 0.51953125, 0.41015625, 0.552734375, 0.39453125, 0.51953125, 0.388671875,
    0.484375, 0.38671875, 0.453125, 0.38671875, 0.40234375, 0.599609375, 0.57421875, 0.599609375,
    0.3046875, 0.634765625, 0.31640625, 0.685546875, 0.341796875, 0.734375, 0.380859375, 0.7734375,
    0.431640625, 0.802734375, 0.6875, 0.638671875, 0.671875, 0.693359375, 0.642578125, 0.7421875,
    0.599609375, 0.78125, 0.546875, 0.806640625, 0.48828125, 0.81640625, 0.25390625, 0.576171875,
    0.2578125, 0.50390625, 0.26171875, 0.43359375, 0.271484375, 0.36328125, 0.29296875, 0.298828125,
    0.328125, 0.24609375, 0.373046875, 0.205078125, 0.427734375, 0.1796875, 0.486328125,
    0.169921875, 0.546875, 0.177734375, 0.60546875, 0.19921875, 0.65625, 0.240234375, 0.69921875,
    0.291015625, 0.724609375, 0.357421875, 0.736328125, 0.427734375, 0.744140625, 0.501953125,
    0.74609375, 0.57421875, 0.25, 0.64453125, 0.263671875, 0.7109375, 0.296875, 0.7734375,
    0.34765625, 0.82421875, 0.4140625, 0.86328125, 0.74609375, 0.650390625, 0.7265625, 0.720703125,
    0.689453125, 0.783203125, 0.6328125, 0.833984375, 0.564453125, 0.8671875, 0.48828125,
    0.880859375, 0, 0, 0, 0, 0, 0, 0, 0
  ]),
  // eye teeth facemask data
  advEyeTeethPosArray: new Int16Array(48),
  advEyeTeethZindexArray: new Int16Array(24),
  advEyeTeethUVArray: new Float32Array([
    // 左眼
    0.927, 0.789, 0.772, 0.877, 0.49, 0.91, 0.269, 0.872, 0.078, 0.764, 0.272, 0.61, 0.506, 0.559,
    0.738, 0.611,
    // 右眼
    0.927, 0.789, 0.772, 0.877, 0.49, 0.91, 0.269, 0.872, 0.078, 0.764, 0.272, 0.61, 0.506, 0.559,
    0.738, 0.611,
    // 牙齿
    0.067, 0.28, 0.267, 0.389, 0.512, 0.364, 0.754, 0.389, 0.933, 0.29, 0.76, 0.159, 0.497, 0.112,
    0.243, 0.156
  ]),
  advEyeTeethIndicesArray: new Uint16Array([
    // 左眼
    1, 0, 7, 1, 7, 6, 1, 6, 2, 2, 6, 5, 2, 5, 3, 3, 5, 4,
    // 右眼
    11, 12, 13, 11, 13, 14, 11, 14, 10, 10, 14, 15, 10, 15, 9, 9, 15, 8,
    // 牙齿
    16, 23, 17, 17, 23, 22, 17, 22, 18, 18, 22, 19, 19, 22, 21, 19, 21, 20
  ]),
  // Forehead facemask data
  advForeheadPosArray: new Int16Array(98),
  advForeheadZindexArray: new Int16Array(49),
  advForeheadUVArray: new Float32Array([
    // 额头
    0.12, 0.564, 0.181, 0.619, 0.26, 0.628, 0.341, 0.616, 0.41, 0.592, 0.597, 0.592, 0.666, 0.616,
    0.747, 0.628, 0.827, 0.619, 0.887, 0.564, 0.051, 0.638, 0.101, 0.753, 0.154, 0.853, 0.236,
    0.933, 0.355, 0.955, 0.504, 0.956, 0.652, 0.955, 0.771, 0.933, 0.853, 0.853, 0.907, 0.753,
    0.956, 0.638,
    // 法令纹
    0.155, 0.266, 0.281, 0.306, 0.441, 0.371, 0.598, 0.395, 0.694, 0.334, 0.763, 0.247, 0.134,
    0.379, 0.242, 0.427, 0.401, 0.49, 0.604, 0.522, 0.749, 0.455, 0.87, 0.3,
    // 左眼袋
    0.306, 0.251, 0.397, 0.232, 0.497, 0.217, 0.593, 0.23, 0.673, 0.262, 0.356, 0.104, 0.491, 0.024,
    0.652, 0.11,
    // 右眼袋
    0.306, 0.251, 0.397, 0.232, 0.497, 0.217, 0.593, 0.23, 0.673, 0.262, 0.356, 0.104, 0.491, 0.024,
    0.652, 0.11
  ]),
  advForeheadIndicesArray: new Uint16Array([
    // 额头
    18, 0, 1, 11, 18, 1, 11, 1, 2, 12, 11, 2, 12, 2, 3, 13, 12, 3, 13, 3, 4, 14, 13, 4, 14, 4, 15,
    15, 4, 5, 16, 15, 5, 17, 16, 5, 17, 5, 6, 17, 6, 18, 18, 6, 7, 19, 18, 7, 19, 7, 8, 20, 19, 8,
    20, 8, 9,
    // 法令纹
    27, 21, 28, 28, 21, 22, 29, 28, 22, 29, 22, 23, 30, 29, 23, 30, 23, 24, 31, 30, 24, 31, 24, 25,
    32, 31, 25, 32, 25, 26
  ])
}
